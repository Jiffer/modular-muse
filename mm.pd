#N canvas 70 59 1134 738 10;
#X obj 101 119 cnv 15 138 60 empty empty empty 20 12 0 14 -138304 -66577
0;
#N canvas 95 274 651 363 read_analog 0;
#X obj 167 67 inlet;
#X obj 70 318 outlet;
#X obj 115 322 outlet;
#X obj 157 322 outlet;
#X obj 181 232 list prepend;
#X obj 267 233 t l;
#N canvas 163 220 646 477 serial_println 0;
#X obj 60 25 inlet;
#X obj 156 145 t f b;
#X obj 156 209 +;
#X obj 183 170 f;
#X obj 183 192 * 10;
#X msg 198 139 0;
#X obj 156 231 t f f;
#X obj 60 248 f;
#X obj 60 122 t b b;
#X obj 60 270 outlet;
#X text 152 17 to be used with [comport] for utilising Arduino's Serial.println()
function;
#X obj 156 116 - 48;
#X text 186 211 this is taken from the code often used in the Arduino:
;
#X text 208 229 while(Serial.available));
#X text 216 244 byte inByte = Serial.read() \;;
#X text 216 257 if((inByte >= '0') && (inByte <= '9'));
#X text 208 295 (curly brackets are not available in Pd's comments)
;
#X text 235 273 int temp = temp * 10 + inByte - '0' \;;
#X text 214 345 written by Alexandros Drymonitis;
#X obj 111 73 moses 48;
#X obj 156 95 moses 58;
#X text 172 72 let only digits through;
#X obj 60 47 sel 10 13;
#X connect 0 0 22 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 3 1;
#X connect 6 0 7 1;
#X connect 6 1 3 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 5 0;
#X connect 11 0 1 0;
#X connect 19 1 20 0;
#X connect 20 0 11 0;
#X connect 22 0 8 0;
#X connect 22 2 19 0;
#X restore 167 160 pd serial_println;
#X text 285 160 turn Serial.println characters into integers;
#X text 303 230 pack values into a list that starts right after the
;
#X text 303 245 begin packet character;
#X text 334 276 send each value to its own outlet add an 'f' and an
outlet for each value you are sending between begin/end chars;
#X text 315 89 65 = 'A': begin digital packet;
#X text 316 104 97 = 'a' : end digital packet;
#N canvas 556 208 852 430 parse-start-stop-Aa 0;
#X msg 179 182 0;
#X msg 152 182 1;
#X msg 238 333 1;
#X obj 238 239 counter;
#X obj 176 387 &&;
#X msg 272 333 0;
#X obj 241 191 gate;
#X obj 205 364 f;
#X obj 171 314 t b b;
#X obj 241 270 > 2;
#X obj 241 308 sel 1 0;
#X obj 209 436 gate;
#X obj 209 478 outlet;
#X text 313 116 65 = 'A' is to start listening;
#X obj 227 60 inlet;
#X obj 342 456 outlet;
#X obj 145 276 f;
#X obj 228 121 t f f f f;
#X text 326 473 send bang when new group is starting;
#X text 58 516 by Jiffer Harriman;
#X text 57 530 Creative Commons Open Source;
#X text 313 133 97 = 'a' is to stop;
#X obj 157 155 sel 65 97;
#X connect 0 0 16 0;
#X connect 0 0 6 0;
#X connect 1 0 16 0;
#X connect 1 0 6 0;
#X connect 2 0 7 1;
#X connect 3 0 9 0;
#X connect 4 0 11 0;
#X connect 5 0 7 1;
#X connect 6 0 3 0;
#X connect 7 0 4 1;
#X connect 8 0 4 0;
#X connect 8 1 7 0;
#X connect 9 0 10 0;
#X connect 10 0 2 0;
#X connect 10 1 5 0;
#X connect 11 0 12 0;
#X connect 14 0 17 0;
#X connect 16 0 4 0;
#X connect 17 0 11 1;
#X connect 17 1 8 0;
#X connect 17 2 6 1;
#X connect 17 3 22 0;
#X connect 22 0 1 0;
#X connect 22 0 15 0;
#X connect 22 1 0 0;
#X connect 22 1 3 2;
#X restore 166 99 pd parse-start-stop-Aa;
#X obj 181 283 unpack f f f f f f f f;
#X obj 201 323 outlet;
#X obj 245 323 outlet;
#X obj 294 324 outlet;
#X obj 337 325 outlet;
#X obj 386 326 outlet;
#X connect 0 0 13 0;
#X connect 4 0 5 0;
#X connect 4 0 14 0;
#X connect 5 0 4 1;
#X connect 6 0 4 0;
#X connect 13 0 6 0;
#X connect 13 1 4 1;
#X connect 14 0 1 0;
#X connect 14 1 2 0;
#X connect 14 2 3 0;
#X connect 14 3 15 0;
#X connect 14 4 16 0;
#X connect 14 5 17 0;
#X connect 14 6 18 0;
#X connect 14 7 19 0;
#X restore 259 264 pd read_analog;
#X obj 479 323 f;
#X obj 565 323 f;
#X obj 640 321 f;
#X obj 421 214 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X floatatom 494 268 5 0 0 0 - - -;
#X floatatom 579 268 5 0 0 0 - - -;
#X floatatom 655 265 5 0 0 0 - - -;
#X obj 494 298 clip 0 255;
#X obj 580 294 clip 0 255;
#X obj 655 294 clip 0 255;
#X floatatom 68 597 5 0 0 0 - - -;
#X floatatom 108 598 5 0 0 0 - - -;
#X floatatom 147 599 5 0 0 0 - - -;
#X obj 68 539 resample 50;
#X obj 108 558 resample 50;
#X obj 147 578 resample 50;
#X obj 422 231 metro 30;
#X obj 422 256 t b b b;
#X text 64 687 by Jiffer Harriman;
#X text 63 701 Creative Commons Open Source;
#X floatatom 187 601 5 0 0 0 - - -;
#X floatatom 227 600 5 0 0 0 - - -;
#X floatatom 266 600 5 0 0 0 - - -;
#X obj 187 539 resample 50;
#X obj 227 558 resample 50;
#X obj 266 578 resample 50;
#N canvas 95 274 761 439 read_digital_inputs 0;
#X obj 167 61 inlet;
#X obj 181 312 outlet;
#X obj 197 337 outlet;
#X obj 213 360 outlet;
#X obj 181 232 list prepend;
#X obj 267 233 t l;
#N canvas 163 220 646 477 serial_println 0;
#X obj 60 25 inlet;
#X obj 156 145 t f b;
#X obj 156 209 +;
#X obj 183 170 f;
#X obj 183 192 * 10;
#X msg 198 139 0;
#X obj 156 231 t f f;
#X obj 60 248 f;
#X obj 60 122 t b b;
#X obj 60 270 outlet;
#X text 152 17 to be used with [comport] for utilising Arduino's Serial.println()
function;
#X obj 156 116 - 48;
#X text 186 211 this is taken from the code often used in the Arduino:
;
#X text 208 229 while(Serial.available));
#X text 216 244 byte inByte = Serial.read() \;;
#X text 216 257 if((inByte >= '0') && (inByte <= '9'));
#X text 208 295 (curly brackets are not available in Pd's comments)
;
#X text 235 273 int temp = temp * 10 + inByte - '0' \;;
#X text 214 345 written by Alexandros Drymonitis;
#X obj 111 73 moses 48;
#X obj 156 95 moses 58;
#X text 172 72 let only digits through;
#X obj 60 47 sel 10 13;
#X connect 0 0 22 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 3 1;
#X connect 6 0 7 1;
#X connect 6 1 3 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 5 0;
#X connect 11 0 1 0;
#X connect 19 1 20 0;
#X connect 20 0 11 0;
#X connect 22 0 8 0;
#X connect 22 2 19 0;
#X restore 167 160 pd serial_println;
#X text 316 104 100 = 'd' : end digital packet;
#X text 315 89 68 = 'D': begin digital packet;
#X text 285 160 turn Serial.println characters into integers;
#X text 303 230 pack values into a list that starts right after the
;
#X text 303 245 begin packet character;
#X text 421 276 send each value to its own outlet add an 'f' and an
outlet for each value you are sending between begin/end chars;
#X obj 229 312 outlet;
#X obj 245 338 outlet;
#X obj 261 362 outlet;
#N canvas 556 208 852 430 parse-start-stop-Dd 0;
#X msg 179 182 0;
#X msg 152 182 1;
#X msg 238 333 1;
#X obj 238 239 counter;
#X obj 176 387 &&;
#X msg 272 333 0;
#X obj 241 191 gate;
#X obj 205 364 f;
#X obj 171 314 t b b;
#X obj 241 270 > 2;
#X obj 241 308 sel 1 0;
#X obj 209 436 gate;
#X obj 209 478 outlet;
#X text 313 116 65 = 'A' is to start listening;
#X obj 227 60 inlet;
#X obj 342 456 outlet;
#X obj 145 276 f;
#X obj 228 121 t f f f f;
#X text 326 473 send bang when new group is starting;
#X text 58 516 by Jiffer Harriman;
#X text 57 530 Creative Commons Open Source;
#X text 313 133 97 = 'a' is to stop;
#X obj 157 155 sel 68 100;
#X connect 0 0 16 0;
#X connect 0 0 6 0;
#X connect 1 0 16 0;
#X connect 1 0 6 0;
#X connect 2 0 7 1;
#X connect 3 0 9 0;
#X connect 4 0 11 0;
#X connect 5 0 7 1;
#X connect 6 0 3 0;
#X connect 7 0 4 1;
#X connect 8 0 4 0;
#X connect 8 1 7 0;
#X connect 9 0 10 0;
#X connect 10 0 2 0;
#X connect 10 1 5 0;
#X connect 11 0 12 0;
#X connect 14 0 17 0;
#X connect 16 0 4 0;
#X connect 17 0 11 1;
#X connect 17 1 8 0;
#X connect 17 2 6 1;
#X connect 17 3 22 0;
#X connect 22 0 1 0;
#X connect 22 0 15 0;
#X connect 22 1 0 0;
#X connect 22 1 3 2;
#X restore 161 96 pd parse-start-stop-Dd;
#X obj 181 283 unpack f f f f f f f f f f f f;
#X obj 277 312 outlet;
#X obj 293 337 outlet;
#X obj 309 360 outlet;
#X obj 325 312 outlet;
#X obj 341 338 outlet;
#X obj 358 362 outlet;
#X connect 0 0 16 0;
#X connect 4 0 5 0;
#X connect 4 0 17 0;
#X connect 5 0 4 1;
#X connect 6 0 4 0;
#X connect 16 0 6 0;
#X connect 16 1 4 1;
#X connect 17 0 1 0;
#X connect 17 1 2 0;
#X connect 17 2 3 0;
#X connect 17 3 13 0;
#X connect 17 4 14 0;
#X connect 17 5 15 0;
#X connect 17 6 18 0;
#X connect 17 7 19 0;
#X connect 17 8 20 0;
#X connect 17 9 21 0;
#X connect 17 10 22 0;
#X connect 17 11 23 0;
#X restore 83 261 pd read_digital_inputs;
#X floatatom 307 599 5 0 0 0 - - -;
#X floatatom 347 600 5 0 0 0 - - -;
#X floatatom 386 601 5 0 0 0 - - -;
#X obj 307 541 resample 50;
#X obj 347 560 resample 50;
#X obj 386 580 resample 50;
#X floatatom 426 603 5 0 0 0 - - -;
#X floatatom 466 602 5 0 0 0 - - -;
#X floatatom 505 602 5 0 0 0 - - -;
#X obj 426 541 resample 50;
#X obj 466 560 resample 50;
#X obj 505 580 resample 50;
#X obj 259 289 s A0;
#X obj 270 309 s A1;
#X obj 282 328 s A2;
#X obj 293 289 s A3;
#X obj 305 309 s A4;
#X obj 316 328 s A5;
#X obj 328 289 s A6;
#X obj 340 309 s A7;
#X obj 68 515 r D2;
#X obj 108 515 r D3;
#X obj 147 515 r D4;
#X obj 187 515 r D5;
#X obj 227 515 r D6;
#X obj 266 515 r D7;
#X obj 307 517 r D8;
#X obj 347 515 r D9;
#X obj 386 517 r D10;
#X obj 426 517 r D11;
#X obj 466 517 r D12;
#X obj 505 517 r D13;
#X obj 83 288 s D2;
#X obj 94 310 s D3;
#X obj 106 334 s D4;
#X obj 118 288 s D5;
#X obj 129 311 s D6;
#X obj 141 335 s D7;
#X obj 153 288 s D8;
#X obj 165 310 s D9;
#X obj 177 334 s D10;
#X obj 188 288 s D11;
#X obj 200 310 s D12;
#X obj 212 335 s D13;
#X floatatom 615 599 5 0 0 0 - - -;
#X floatatom 655 600 5 0 0 0 - - -;
#X floatatom 694 601 5 0 0 0 - - -;
#X obj 615 541 resample 50;
#X obj 655 560 resample 50;
#X obj 694 580 resample 50;
#X floatatom 734 603 5 0 0 0 - - -;
#X floatatom 774 602 5 0 0 0 - - -;
#X floatatom 813 602 5 0 0 0 - - -;
#X obj 734 541 resample 50;
#X obj 774 560 resample 50;
#X obj 813 580 resample 50;
#X floatatom 854 601 5 0 0 0 - - -;
#X obj 854 543 resample 50;
#X obj 615 517 r A0;
#X obj 655 517 r A1;
#X obj 694 517 r A2;
#X obj 734 517 r A3;
#X obj 774 517 r A4;
#X obj 813 517 r A5;
#X obj 854 519 r A6;
#X floatatom 896 601 5 0 0 0 - - -;
#X obj 896 563 resample 50;
#X obj 896 519 r A7;
#X obj 613 435 mm-analog 0;
#X obj 87 65 inlet;
#X obj 103 159 pddp/dsp;
#X obj 179 121 bng 25 250 50 0 empty empty list 0 32 0 10 -262144 -1
-1;
#X msg 157 186 devices;
#X msg 70 207 open \$1;
#X floatatom 139 128 5 0 0 3 port - -;
#X obj 209 121 bng 25 250 50 0 empty empty close 0 32 0 10 -262144
-1 -1;
#X msg 223 187 close;
#X text 2 86 ON;
#X msg -55 81 \; pd dsp 1;
#X obj -55 31 loadbang;
#X obj -55 54 del 500;
#X obj 107 122 bng 25 250 50 0 empty empty open 0 32 0 10 -262144 -1
-1;
#X obj 71 463 mm-digital 2;
#X obj 189 210 r \$0-toArduino;
#X obj 479 363 s \$0-toArduino;
#X obj 70 187 f;
#X obj 88 234 comport 4 38400;
#X connect 1 0 41 0;
#X connect 1 1 42 0;
#X connect 1 2 43 0;
#X connect 1 3 44 0;
#X connect 1 4 45 0;
#X connect 1 5 46 0;
#X connect 1 6 47 0;
#X connect 1 7 48 0;
#X connect 2 0 113 0;
#X connect 3 0 113 0;
#X connect 4 0 113 0;
#X connect 5 0 18 0;
#X connect 6 0 9 0;
#X connect 7 0 10 0;
#X connect 8 0 11 0;
#X connect 9 0 2 1;
#X connect 10 0 3 1;
#X connect 11 0 4 1;
#X connect 15 0 12 0;
#X connect 16 0 13 0;
#X connect 17 0 14 0;
#X connect 18 0 19 0;
#X connect 19 0 4 0;
#X connect 19 1 3 0;
#X connect 19 2 2 0;
#X connect 25 0 22 0;
#X connect 26 0 23 0;
#X connect 27 0 24 0;
#X connect 28 0 61 0;
#X connect 28 1 62 0;
#X connect 28 2 63 0;
#X connect 28 3 64 0;
#X connect 28 4 65 0;
#X connect 28 5 66 0;
#X connect 28 6 67 0;
#X connect 28 7 68 0;
#X connect 28 8 69 0;
#X connect 28 9 70 0;
#X connect 28 10 71 0;
#X connect 28 11 72 0;
#X connect 32 0 29 0;
#X connect 33 0 30 0;
#X connect 34 0 31 0;
#X connect 38 0 35 0;
#X connect 39 0 36 0;
#X connect 40 0 37 0;
#X connect 49 0 15 0;
#X connect 50 0 16 0;
#X connect 51 0 17 0;
#X connect 52 0 25 0;
#X connect 53 0 26 0;
#X connect 54 0 27 0;
#X connect 55 0 32 0;
#X connect 56 0 33 0;
#X connect 57 0 34 0;
#X connect 58 0 38 0;
#X connect 59 0 39 0;
#X connect 60 0 40 0;
#X connect 76 0 73 0;
#X connect 77 0 74 0;
#X connect 78 0 75 0;
#X connect 82 0 79 0;
#X connect 83 0 80 0;
#X connect 84 0 81 0;
#X connect 86 0 85 0;
#X connect 87 0 76 0;
#X connect 88 0 77 0;
#X connect 89 0 78 0;
#X connect 90 0 82 0;
#X connect 91 0 83 0;
#X connect 92 0 84 0;
#X connect 93 0 86 0;
#X connect 95 0 94 0;
#X connect 96 0 95 0;
#X connect 98 0 115 0;
#X connect 100 0 101 0;
#X connect 101 0 115 0;
#X connect 102 0 115 0;
#X connect 103 0 114 1;
#X connect 104 0 105 0;
#X connect 105 0 115 0;
#X connect 108 0 109 0;
#X connect 109 0 107 0;
#X connect 110 0 114 0;
#X connect 112 0 115 0;
#X connect 114 0 102 0;
#X connect 115 0 28 0;
#X connect 115 0 1 0;
#X coords 0 -1 1 1 140 80 1 100 100;
